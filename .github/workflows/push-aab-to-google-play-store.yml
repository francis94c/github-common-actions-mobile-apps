name: push-aab-to-google-play-store

on:
  workflow_dispatch:
    inputs:
      aab-file-name:
        description: AAB File Name.
        required: false
        type: string
      aab-artifact-name:
        description: AAB Artifact Name.
        required: false
        type: string
      app-id:
        description: App ID.
        required: true
        type: string
  workflow_call:
    inputs:
      aab-file-name:
        description: AAB File Name.
        required: false
        type: string
      aab-artifact-name:
        description: AAB Artifact Name.
        required: false
        type: string
      app-id:
        description: App ID.
        required: true
        type: string
    secrets:
      GITHUB_ENV_TOKEN:
        description: GITHUB_ENV_TOKEN
        required: true
      GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT:
        description: GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT
        required: true

jobs:
  download-latest-release-and-push-to-google-play:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Inputs
        run: |
          if [ -z "${{ inputs.aab-file-name }}" ] && [ -z "${{ inputs.aab-artifact-name }}" ]; then
            echo "Either aab-file-name or aab-artifact-name is required"
            exit 1
          fi

      - uses: actions/checkout@v1

      - if: ${{ inputs.aab-artifact-name == '' && inputs.aab-file-name != '' }}
        name: Get latest release
        uses: pozetroninc/github-action-get-latest-release@v0.7.0
        id: get-latest-release
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_ENV_TOKEN }}

      - if: ${{ inputs.aab-artifact-name == '' && inputs.aab-file-name != '' }}
        name: release-downloader
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ steps.get-latest-release.outputs.release }}
          fileName: '${{ inputs.aab-file-name }}-${{ steps.get-latest-release.outputs.release }}.aab'
          out-file-path: release

      - if: ${{ inputs.aab-artifact-name != '' && inputs.aab-file-name == '' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.aab-artifact-name }}

      - if: ${{ inputs.aab-artifact-name == '' && inputs.aab-file-name != '' }}
        name: Normalize AAB File Name
        run: |
          mv ./release/${{ inputs.aab-file-name }}-${{ steps.get-latest-release.outputs.release }}.aab ./app-release.aab

      - if: ${{ inputs.aab-artifact-name != '' && inputs.aab-file-name == '' }}
        name: Normalize AAB File Name
        run: |
          mv ./${{ inputs.aab-artifact-name }}/app-release.aab ./app-release.aab

      - name: 'Check Release Notes Existence'
        id: release_notes_exists
        uses: andstor/file-existence-action@v2
        with:
          files: './RELEASE_NOTES.txt'
          fail: false

      - name: Create what's new directory and copy Release Notes
        run: mkdir whatsnew && cp ./RELEASE_NOTES.txt ./whatsnew/whatsnew-en-US

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT }}
          packageName: ${{ inputs.app-id  }}
          releaseFiles: app-release.aab
          track: production
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 1
          whatsNewDirectory: whatsnew
          mappingFile: app/build/outputs/mapping/release/mapping.txt
          debugSymbols: app/intermediates/merged_native_libs/release/out/lib
