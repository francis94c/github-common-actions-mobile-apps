name: push-aab-to-google-play-store

on:
  workflow_dispatch:
    inputs:
      aab-artifact-name:
        description: AAB Artifact Name.
        required: false
        type: string
      app-id:
        description: App ID.
        required: true
        type: string
      track:
        description: Track.
        required: true
        type: string
      status:
        description: Status.
        required: false
        type: string
      merged-native-libs-symbols-artifact-name:
        description: Merged Native Libs Symbols Artifact Name
        required: false
        type: string
      environment:
        description: Environment.
        required: false
        type: environment
      runner:
        description: Runner.
        required: false
        default: ubuntu-latest
        type: string
      flavor:
        description: Flavor. e.g. dev, prod
        required: false
        type: string
  workflow_call:
    inputs:
      aab-artifact-name:
        description: AAB Artifact Name.
        required: false
        type: string
      app-id:
        description: App ID.
        required: true
        type: string
      track:
        description: Track.
        required: true
        type: string
      status:
        description: Status.
        required: true
        type: string
      merged-native-libs-symbols-artifact-name:
        description: Merged Native Libs Symbols Artifact Name
        required: false
        type: string
      environment:
        description: Environment.
        required: false
        type: string
      runner:
        description: Runner.
        required: false
        default: ubuntu-latest
        type: string
      flavor:
        description: Flavor. e.g. dev, prod
        required: false
        type: string
    secrets:
      GITHUB_ENV_TOKEN:
        description: GITHUB_ENV_TOKEN
        required: true
      GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT:
        description: GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT
        required: true
      SLACK_WEBHOOK_URL:
        description: SLACK_WEBHOOK_URL
        required: true

jobs:
  download-latest-release-or-artifact-and-push-to-google-play:
    environment: ${{ inputs.environment }}
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v1

      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.aab-artifact-name }}

      - name: Download Mapping Artifact
        uses: actions/download-artifact@v4
        with:
          name: mapping

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.merged-native-libs-symbols-artifact-name }}

      - name: LS
        run: ls -la

      - name: Normalize Artifact File Names (AAB Artifact)
        run: |
          mv ./app${{ inputs.flavor != '' && format('-{0}', inputs.flavor) || '' }}-release.aab ./app-release.aab

      - name: Extract Flutter Debug Symbols
        run: unzip -q ./symbols.zip -d symbols

      - name: 'Check Release Notes Existence'
        id: release_notes_exists
        uses: andstor/file-existence-action@v2
        with:
          files: './RELEASE_NOTES.txt'
          fail: false

      - name: Create what's new directory and copy Release Notes
        run: mkdir whatsnew && cp ./RELEASE_NOTES.txt ./whatsnew/whatsnew-en-US

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON_CONTENT }}
          packageName: ${{ inputs.app-id  }}
          releaseFiles: app-release.aab
          track: ${{ inputs.track }}
          status: ${{ inputs.status }}
          inAppUpdatePriority: 2
          whatsNewDirectory: whatsnew
          mappingFile: mapping.txt
          debugSymbols: symbols

      - if: ${{ failure() }}
        name: The job has failed
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_MESSAGE: 'Push AAB :android: to Google Play for `${{ github.event.repository.name }}` failed :x:.'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
