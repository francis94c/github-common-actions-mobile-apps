name: flutter-build-ipa

on:
  workflow_dispatch:
    inputs:
      version-code:
        description: Version code. e.g. 1.0.3+7
        required: false
        type: string
      flavor:
        description: Flavor. e.g. dev, prod
        required: false
        type: string
      obfuscate:
        description: Obfuscate
        type: boolean
        default: true
      environment:
        description: Environment
        type: string
        default: staging
      app-name:
        description: App Name
        type: string
        default: App Name
        required: true
      ipa-artifact-name:
        description: IPA Artifact Name
        type: string
        default: IPA Artifact Name
        required: true
  workflow_call:
    inputs:
      version-code:
        description: Version code. e.g. 1.0.3+7
        required: false
        type: string
      flavor:
        description: Flavor. e.g. dev, prod
        required: false
        type: string
      obfuscate:
        description: Obfuscate
        type: boolean
        default: true
      environment:
        description: Environment
        type: string
        default: staging
      app-name:
        description: App Name
        type: string
        default: App Name
        required: true
      ipa-artifact-name:
        description: IPA Artifact Name
        type: string
        default: IPA Artifact Name
        required: true
    secrets:
      APP_ENV:
        description: App Environment
        required: true
      SLACK_WEBHOOK_URL:
        description: Slack Webhook URL
        required: false
      APPSTORE_CERT_BASE64:
        description: AppStore Certificate Base64
        required: false
      APPSTORE_CERT_PASSWORD:
        description: AppStore Certificate Password
        required: false
      MOBILEPROVISION_BASE64:
        description: Mobile Provision Base64
        required: false
      KEYCHAIN_PASSWORD:
        description: Keychain Password
        required: false
      EXPORT_OPTIONS_PLIST_BASE64:
        description: Export Options Plist
        required: false

jobs:
  build-ios:
    runs-on: macos-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.13.2'

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Code Generators
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install the Apple certificate and provisioning profile
        id: security
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERT_BASE64 }}
          P12_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          echo "keychain-path=$KEYCHAIN_PATH" >> $GITHUB_OUTPUT
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # get provisioning profile uuid and rename provisioning profile.
          UUID=$(grep UUID -A1 -a "$PP_PATH" | grep -io "[-A-Z0-9]\{36\}")
          mv $RUNNER_TEMP/build_pp.mobileprovision $RUNNER_TEMP/$UUID.mobileprovision
          PP_PATH=$RUNNER_TEMP/$UUID.mobileprovision
          echo "profile-uuid=$UUID" >> $GITHUB_OUTPUT
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          ORIGINAL_KEYCHAINS=`security list-keychains -d user`
          echo "original-keychains=$ORIGINAL_KEYCHAINS" >> $GITHUB_OUTPUT
          security list-keychain -d user -s $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          CERT_SHA_1=$(security find-identity -v -p codesigning $KEYCHAIN_PATH | awk -F' ' 'NR==1{print $2}')
          echo "cert-sha-1=$CERT_SHA_1" >> $GITHUB_OUTPUT
          # apply provisioning profile
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          cp $PP_PATH "$HOME/Library/MobileDevice/Provisioning Profiles"

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Prepare ENV File
        run: echo "${{ secrets.APP_ENV }}" | base64 --decode > .env

      - name: Prepare Export Options Plist
        run: echo "${{ secrets.EXPORT_OPTIONS_PLIST_BASE64 }}" | base64 --decode > ios/export_options.plist

      - if: "${{ inputs.flavor == '' }}"
        name: Build Normal IPA
        run: flutter build ios --release --no-codesign

      - if: "${{ inputs.flavor != '' }}"
        name: Build Flavored IPA
        run: flutter build ios --release --no-codesign  --obfuscate --split-debug-info=build/ios/ipa --flavor ${{ inputs.flavor }} -t lib/main_${{ inputs.flavor }}.dart

      - name: Archive IPA
        run: xcodebuild -workspace ios/Runner.xcworkspace  CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -scheme Runner -configuration Release${{ format('{0}{1}', inputs.flavor != '' && '-' || '', inputs.flavor) }} -destination "generic/platform=iOS" archive -archivePath build/ios/Runner.xcarchive

      - name: Export & Sign IPA
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          xcodebuild -exportArchive -archivePath build/ios/Runner.xcarchive -exportOptionsPlist ios/export_options.plist -exportPath build/ios/ipa/Runner.ipa OTHER_CODE_SIGN_FLAGS='--keychain=$KEYCHAIN_PATH' CODE_SIGN_IDENTITY=17AF5D8118210622963EAF6C57F8DDC4EE41E629

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.ipa-artifact-name }}${{ format('{0}{1}', inputs.flavor != '' && '-' || '', inputs.flavor) }}
          path: ./build/ios/ipa/Runner.ipa/${{ inputs.app-name }}.ipa

      - name: Upload Archive Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Runner-Archive
          path: ./build/ios/Runner.xcarchive

      - name: Upload BOM Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bom
          path: ./pubspec.lock

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        env:
          UUID: ${{ steps.security.outputs.profile-uuid }}
          ORIGINAL_KEYCHAINS: ${{ steps.security.outputs.original-keychains }}
          KEYCHAIN_PATH: ${{ steps.security.outputs.keychain-path }}
        run: |
          # ORIGINAL_KEYCHAINS=`security list-keychains -d user`
          security delete-keychain $KEYCHAIN_PATH
          security list-keychains -d user -s ${ORIGINAL_KEYCHAINS}
          rm "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"

      - name: The job has failed
        if: ${{ failure() && inputs.flavor == '' }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_MESSAGE: 'IPA Build for `${{ github.event.repository.name }}` :ios: failed :x:.'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
